{"version":3,"sources":["Component/Statistics/Statistics.module.css","Component/Section/Section.module.css","Component/FeedbackOptions/FeedbackButton/FeedbackButton.module.css","Component/Container/Container.module.css","Component/FeedbackOptions/FeedbackOptions.module.css","Component/Notification/Notification.module.css","Component/Container/Container.jsx","Component/Section/Section.jsx","Component/FeedbackOptions/FeedbackButton/FeedbackButton.jsx","Component/FeedbackOptions/FeedbackOptions.jsx","Component/Notification/Notification.jsx","Component/Statistics/Statistics.jsx","Component/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","css","container","Section","title","section","FeedbackButton","feedback","clickFeedback","item","type","onClick","FeedbackOptions","options","list","map","option","name","id","Notification","message","notification","Statistics","good","neutral","bad","totalFeedback","positiveFeedbackPercentage","itemFeedback","App","state","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4353f7a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__33GpC\",\"item\":\"Statistics_item__A5-x_\",\"itemFeedback\":\"Statistics_itemFeedback__177U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2HRlZ\",\"title\":\"Section_title__36_ZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackButton_item__ksQM1\",\"button\":\"FeedbackButton_button__1TwDk\",\"good\":\"FeedbackButton_good__gmxjK FeedbackButton_button__1TwDk\",\"neutral\":\"FeedbackButton_neutral__261Yn FeedbackButton_button__1TwDk\",\"bad\":\"FeedbackButton_bad__wTabz FeedbackButton_button__1TwDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Y17V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__3B-Tf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2Pspd\"};","import css from 'Component/Container/Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={css.container}>{children}</div>;\n};\n","import PropTypes from 'prop-types';\n\nimport css from 'Component/Section/Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport css from 'Component/FeedbackOptions/FeedbackButton/FeedbackButton.module.css';\n\nexport const FeedbackButton = ({ feedback, clickFeedback }) => {\n  return (\n    <li className={css.item}>\n      <button\n        className={css[feedback]}\n        type=\"button\"\n        data-feedback={feedback}\n        onClick={clickFeedback}\n      >\n        {feedback}\n      </button>\n    </li>\n  );\n};\n\nFeedbackButton.propTypes = {\n  feedback: PropTypes.oneOf(['good', 'neutral', 'bad']).isRequired,\n  clickFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { FeedbackButton } from 'Component/FeedbackOptions/FeedbackButton';\n\nimport css from 'Component/FeedbackOptions/FeedbackOptions.module.css';\n\nexport const FeedbackOptions = ({ options, clickFeedback }) => {\n  return (\n    <ul className={css.list}>\n      {options.map(option => (\n        <FeedbackButton\n          key={option.id}\n          feedback={option.name}\n          clickFeedback={clickFeedback}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  clickFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport css from 'Component/Notification/Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  return <p className={css.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport css from 'Component/Statistics/Statistics.module.css';\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  totalFeedback,\n  positiveFeedbackPercentage,\n}) => {\n  return (\n    <ul className={css.list}>\n      <li className={css.item}>\n        Good: <span className={css.itemFeedback}>{good}</span>\n      </li>\n      <li className={css.item}>\n        Neutral: <span className={css.itemFeedback}>{neutral}</span>\n      </li>\n      <li className={css.item}>\n        Bad: <span className={css.itemFeedback}>{bad}</span>\n      </li>\n      <li className={css.item}>\n        Total: <span className={css.itemFeedback}>{totalFeedback}</span>\n      </li>\n      <li className={css.item}>\n        Positive Percantage:{' '}\n        <span className={css.itemFeedback}>{positiveFeedbackPercentage}</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\n\nimport { Container } from 'Component/Container';\nimport { Section } from 'Component/Section/Section';\nimport { FeedbackOptions } from 'Component/FeedbackOptions';\nimport { Notification } from 'Component/Notification';\nimport { Statistics } from 'Component/Statistics';\n\nimport options from 'data/typeFeedback.json';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage =\n      ((good / totalFeedback) * 100).toFixed() + ' %';\n    return totalFeedback ? positiveFeedbackPercentage : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            clickFeedback={this.clickFeedback}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {!totalFeedback ? (\n            <Notification message={'No feedback given'} />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              totalFeedback={totalFeedback}\n              positiveFeedbackPercentage={positiveFeedbackPercentage}\n            ></Statistics>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'Component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}